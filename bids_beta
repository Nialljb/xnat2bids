#!/bin/sh

Usage() {
  cat <<EOF
    ___________ _   ____
   / ____|__  // | / / /
  / /     /_ </  |/ / /
 / /___ ___/ / /|  / /___
 \____//____/_/ |_/_____/

 Niall J. Bourke Imperial College London Feb 2019
 n.bourke@imperial.ac.uk
 v2.2 (July 2020)
 v2.3 (Oct 2021)

usage:  bids_2_proc -i <project_ID> -c <config.json>

e.g. bids_2_proc -i DREAM -c CIF_config.json

* Check output from preproc step
* Subjects should be labled by their CIF ID
* Scanning sessions should be inside the CIF ID level
* Meta data regarding scan sessions and dates should be saved to a json.

EOF
  exit 1
}

if [  $# -le 3 ];
  then
  Usage
  exit 1
 fi

while [ $# -ge 3 ];
do
  case "$1" in

		-i)
					project=$2;
          con=$4
					shift;;

  esac
  shift
done


  echo " Input job = $project "

# Initial Setup
module load mricogl
dependencies=/rds/general/project/c3nl_shared/live/dependencies
config=${dependencies}/${con}

### HARDCODED ###
wd=/rds/general/project/c3nl_djs_working_dir/ephemeral
mkdir -p ${wd}/${project}/sourcedata
out=${wd}/${project}/sourcedata
### END EDIT ###

echo "project is $project"
echo "config is $config"

cd ${wd}/${project}
# Loop over data
for subject in `ls -d ${wd}/${project}/*/`;
    do
    sub=`basename $subject`
    echo "organising: $sub ... "

    for session in `ls -d ${wd}/${project}/${sub}/*/`; 
        do
        sesh=`basename $session`
        echo ""
        echo "in session: $sesh"
        echo ""
        DIR=${out}/sub-${sub}/ses-${sesh}/

        for sequence in `ls -d ${wd}/${project}/${sub}/${sesh}/scans/*`;
            do
            scan=`basename $sequence`
            mkdir -p ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/NIFTI/
            #mv ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/DICOM/files/* ${wd}/${project}/${sub}/${sesh}/${scan}/DICOM/
            echo "scan is $scan"
            FILE=`ls -f ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/NIFTI/*.nii`;
            if [ -f "$FILE" ]; then
                echo "$FILE already exists."
            else
                echo "Converting ${scan} from DICOM ==> NIFTI..."
                dcm2niix -o ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/NIFTI/ ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/DICOM/files/ #
            
            fi
            echo "Copying to source dir in BIDS format..."
            for key in $(cat $config | jq '.descriptions | to_entries[] | .key'); 
                do
                sd=$(cat $config | jq -r '.descriptions['$key'].criteria.SeriesDescription');
                #Match data with index file
                if [[ $scan = $sd ]]; then
                    dt=$(cat $config | jq -r '.descriptions['$key'].dataType')
                    ml=$(cat $config | jq -r '.descriptions['$key'].modalityLabel')
                    cl=$(cat $config | jq -r '.descriptions['$key'].customLabels')

                    echo "${out}/sub-${sub}/ses-${sesh}/${dt}/${ml}/"
                    mkdir -p ${out}/sub-${sub}/ses-${sesh}/${dt}/${ml}/

                    for scanData in `ls -f ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/NIFTI/`; 
                        do
                        sdata=`basename $scanData`
                        echo "sdata is $sdata"
                        suf=$(echo $sdata | cut -d'.' -f2,3)
                        echo "suf is $scanData"
                        for im_files in `ls ${wd}/${project}/${sub}/${sesh}/scans/${scan}/resources/NIFTI/*.${suf}`; 
                            do
                            cp ${im_files} ${out}/sub-${sub}/ses-${sesh}/${dt}/${ml}/sub-${sub}_ses-${sesh}_${cl}.${suf}
                            echo "output /sub-${sub}/ses-${sesh}/${dt}/${ml}/sub-${sub}_ses-${sesh}_${cl}.${suf}"        
                        done
                    done
                fi    
            done
            #continue
            #copy metaData
            #cp ${wd}/${project}/${sub}/${sesh}/metaData* ${out}/sourcedata/sub-${sub}/ses-${sesh}/
            #fi
        done
    done
done

# Share the data love
chmod -R +rwx ${out}/*
