#!/bin/sh

Usage() {
  cat <<EOF
    ___________ _   ____
   / ____|__  // | / / /
  / /     /_ </  |/ / /
 / /___ ___/ / /|  / /___
 \____//____/_/ |_/_____/

 Niall J. Bourke Imperial College London Feb 2019
 n.bourke@imperial.ac.uk


usage:  bids_preproc.sh -i <project_ID>

e.g. bids_preproc.sh -i DREAM

*This function assumes data has been downloaded with the xnat data downloader notebook.
*Working directory is currently hardcoded for TBI data 
*Doesnt like study names to include "_" as it takes the string before the first "_" as the study ID
*May have resolved the above..
* Low resources required - can run on head node, recomend submitting if a large project - 2GB Mem, 1CPU should be sufficiant 




EOF
  exit 1
}

if [  $# -le 1 ];
  then
  Usage
  exit 1
 fi

while [ $# -ge 1 ];
do
  case "$1" in

		-i)
					project=$2;
					shift;;

  esac
  shift
done


  echo " Input job = $project "

wd=/rds/general/project/c3nl_djs_imaging_data/live/data/raw/
out=/rds/general/project/c3nl_djs_imaging_data/live/data
cd ${wd}/${project}

for ii in `ls *.zip`; do

    # Gather labels
    study="$(echo $ii | cut -d'_' -f1)"
    scanner="$(echo $ii | cut -d'_' -f2)"
    sid="$(echo $ii | cut -d'_' -f3)"
    eid="$(echo $ii | cut -d'_' -f5)"

    SID="${scanner}_${sid}"; 
    EID="${scanner}_${eid}";

    # Loop over subject indexing file
    INPUT=${out}/indexFiles/${project}_subject.csv
    [ ! -f $INPUT ] && {echo "$INPUT file not found"}

        while IFS="," read c1 c2 c3 c4 c5 c6
        do
	
        # Match data with index file
        if [[ $SID = $c1 ]]; then
	
        [[ -d $c3 ]] || mkdir $c3
        mv $ii $c3
        unzip $c3/$ii -d $c3
        cifid=$c3
	echo "processing $cifid ..."
        fi
        done < "$INPUT"


    # Loop over experiment indexing file
    INPUT2=${out}/indexFiles/${project}_experiments.csv
    [ ! -f $INPUT2 ] && {echo "$INPUT file not found"}

        while IFS="," read c1 c2 c3 c4 c5 c6 c7 c8
        do
        # Match data with index file
        if [[ $EID = $c1 ]]; then
        JSON='{"'"$c6"'": "'"$c4"'"}'
        printf '%s\n' "$JSON" >> $cifid/$c6/metaData-${c6}.json
        xx=$(cat $cifid/${c6}/metaData-${c6}.json | jq -r ' .[]')
        mv $cifid/${c6} $cifid/${xx}-${c6}
        fi
        done < "$INPUT2"

echo "processed $cifid"
done
